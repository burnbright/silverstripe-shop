Shop ChangeLog

0.8.5

Enhancements:

 * added hook to product link function
 * Added AddProductForm to Product_Controller. Improved AddProductForm to better support the 'buyables' concept.
 * improved debugging display for shoppingcart/debug. Colouring and showing item details.
 * Added security token to shopping cart links, and request handling. This helps prevent CSRF attacks.
 * Create unique links for updating carts with customized order items. Introduced $Buyable url param for better custom product handling, and removed OtherID url param.
 * Introduced .htaccess file for added security
 * Also added check for valid payment type, and items can be purchased.
 * Introduced OrderItemList, an extension of ComponentSet that provides Quantity and Plural functions to allow displaying cart total quantity. Updated SideCart.ss template to make use of these new functions.
 * Introduced heavy products report for finding products that might have incorrect weights.
 * Added $Form to cart template. Refactored SideCart to display better.
 * Improved ShopMigrationTask to handle Product VaraitionAttributeTypes relationship name change. Removed payment migration code, as it should in the payment module.
 * Introduced optional SQL-based delete for cart cleanup task. Its less safe, but it's faster.
 * Allow a different template to be used when rendering orders in the CMS. Re-introduced order.css file to provide good default order styling.
 * Created an config option for choosing where to direct after cart manipulations.
 * Created PopulateShopTask to populate the database with some dummy categories, products, and variations.
 * Custom product testing and documentation.
 * Enforced the buyable interface within shopping cart. Removed references to product variation. Introduced buyable_relationship static variable on OrderItem as a way to recognizese associations for custom buyable objects.
 * Default template and css updates, additions and removals.
 * created AddProductForm for adding products via a form submission. This should help with preventing carts from being created for no reason. Relates to #7
 * Template improvements, including adding images and subtitle to order content.
 * Introduced filtering / parameter system for cart items. This allows adding customized products to the cart, and have quantities automatically update, rather than adding completely new order items. fixes #22
 * Removed custom debug statements. These were confusing, because they only provided a sub-set of the full debug information that developers are used to.
 * updated Order_Content_Editable template to use better styling approaches.
 * Complete rewrite of ShoppingCart. Split into two classes: ShoppingCart and ShoppingCart_Controller. The ShoppingCart class is a singleton and provides restricted access to an order for adding/removing items, and clearing the cart completely.
 * cleaned up OrderItems. Removed some remaining bits of session-based cart functionality/variables that were not needed.
 * used Object::useCustomClass to swap Currency with EcommerceCurrency, for template purposes. Renamed all occurrences of EcommerceCurrency back to plain old Currency. Introduced CanBeFreeCurrency class, which simply displays "FREE" when it's value is 0;
 * moved migration code from requireDefaultRecords to ShopMigrationTask
 * Further overhaul of modifiers system. Renamed $order->CalculateModifiers() to $order->calculate(), as it applies to totals also. Fixed all modifiers and tests to use new format.
 * Moved default record creation into PopulateShopTask.
 * Major changes to modifiers system. They now are calculated via Order->CalculateModifiers, rather than internally. This is because they rely on a continuous calculation from the items SubTotal..through each modifier, and eventually producing the total.

API Changes:

 * Made ShoppingCart_Controller direct function static, to allow it to be called from outside classes.
 * Split Order - Attributes relationship into Order - Items and Order - Modifiers so that sets can be distinctly retrieved and updated with the built in ComponentSet functionality.
 * Renamed EcommercePayment to ShopPayment.
 * Added cart and checkout links to ViewableCart. Added find_link to CartPage, along with the ability to display a cart without a CartPage.
 * Decoupled order processing from Order and OrderForm. Decoupled email creation from Order. Created OrderProcessor to handle processing / fulfillment. fixes #23 fixes #3
 * Renamed ProductGroup to ProductCategory. This new name better suits the purpose the class serves.

Bug Fixes:

 * moved development admin to using proper url rule, rather than the decorator approach. The bug was that the 'shop' action was allowed on any controller.
 * fixed invalid reference when getting OrderItem links
 * fixed null reference for terms page on order form
 * Terms and conditions are now checked properly.
 * fixed links and function references in ShopDatabaseAdmin relates to renaming in 7843309144a42eed230ddf1816f1a5601a36093f
 * typo in product variation code
 * fixed order printing bug.
 * got variations working again with the new shopping cart improvements.
 * MatchObjectFilter was including has_ones that it shouldn't.
 * cart contents showing on checkout page. MINOR: Removed sessionID from order. Past orders are now stored in a session array instead.
 * orders now calculate during migration task, if they don't have a Total
 * Temporary solution for fixing Versioned, to allow storing product versions against order items. Fixes issue #15
 * updated reference to deprecated ShoppingCart function. Fixes issue #20
 * introduced an interim fix for versioned issue. Added static variable to disable using versioned.
 * remove modifiers that aren't in Order::. Deprecatd CartValue now points to TableValue, instead of TableTitle
 * Fixed ability to remove modifiers.

0.8.3

 * Renamed module to 'shop', and changed all 'ecommerce' directory references to 'shop', in line with new name for the module.
 * Added in CalculatedTotal to OrderAttribute for the purpose of permanantly storing old values, and helping with order read speed.
 * Made VariaionForm the default way to add product variations.
 * ENHANCEMENT: Allowed checkout page to not require a page model.
 * updated documentation to include packages, and sub packages for phpdoc
 * Ability to add product attribute values from product edit page, rather than model admin.
 * Removed OrderFormWithoutShippingAddress, and OrderFormWithShippingAddress

0.8.2

 * Modified order form to allow orders to be placed without becoming a member in the process.
 * Introduced EcommerceRole::associate_to_current_order() for choosing to join order to member on login.
 * Added CartPage action and template "finished", which displays the order just placed.
 * Copied all ecommerce member fields to Order, so that orders can be placed without member.
 * Added docs folder, along with some developer and user documentation
 * Introduced mysite/dev/ecommerce to get quick access to ecommerce dev tools
 * Began updating test suite
 * Introduced the ability to pay and cancel incomplete orders
 * Introduced ECOMMERCE_DIR constant to allow ecommerce directory to be different. Note that some paths are still make use of 'ecommerce'.

0.7 - 0.8.1	

 * Variations working again
 * Re-structured default templates to be more hierartical and extensible. Removed redundant templates.
 * Implemented new reciept design
 * Updated CMS Order interface
 * Introduced FullBillingAddress and FullShippingAddress functions on Order to provide ways to get combined address fields.

 * Merged in DBCart, Burnbright, and SunnySideUp branches
 * Depricated AllowPurchase function on Product & ProductVariation in favour of canPurcahse. SilverStripe has can____ capabilites built in, and AllowPurchase was overriding the DB field.
 * Improved ProductBulkLoader to allow setting ProductGroup, and linking up an image of the product.
 * Merged ShoppingCart and ShoppingCart_Controller into one class
 * Introduced filters/paremeters system for more complex cart situations

0.6.1

 * Modified code to work with SS 2.4, and payment trunk as @ revision 103257. This mainly involved supporting the Money class.
 * Separated out unnecessary css styling. The default style is very much tied to black candy. (This can be put into a theme)
 * Improved efficiency of ProductGroup to make one database call to retrieve products. All ProductGroup children are retrieved by default, rather than just the immediate children.
 * Removed 'ShowInMenus' condition for displaying group products.
 * Added sorting controls to ProductGroup pages
 * Added pagination to default ProductGroup template
 * Removed separation of featured and non-featured products. The default sort is set to show featured products, then the rest by title (similar to TradeMe.co.nz)
 * Tidied up invoice printing
 * Got the 'all orders' SS report working again
 * Added 'Store' model admin for orders
 * Show products in multiple categories (does not yet include recursive sub-category products)
 * Variations of the same product can now be added to the cart together
 * Prevented order payment form showing on checkout template if nothing is in shopping cart.
 * Re-ordered CMS fields so they are more visible (eg price, weight, model)
 * Updated sitetree icons (product = package, checkout = shopping cart, account = contact card)
 * Include shopping cart page type
 * Removed quantity selectors from products on group page, as they can be updated using the cart on the left.
 * Added support for calculating and storing the number of products sold
	
0.6

 * Data model changes (see http://doc.silverstripe.com/doku.php?id=ecommerce:overview&s=ecommerce)
 * PHP files moved into folders for grouping of models, controllers and forms
 * Fixed undefined find_link() function on AccountPage_Controller
 * Check that the member can create a member with the unique field
 * Added translation for Arabic (Saudi Arabia) - thanks to Talal
 * Fixed template call to Text::LimitWordCountPlainText()
 * Fixed ID quoting in Product_Controller->addVariation()
 * #3939 Ability to show all products in ProductGroup
 * Fixed ShoppingCart index item to be the product ID
 * Re-added link methods back to Product_OrderItem from OrderItem
 * More agressive checking of Payment before creating a new Order on OrderForm
 * Added empty statics to various ecommerce classes to support decoration of statics via DataObjectDecorator
 * Creation of OrderItem with Product data record properly
 * Fixed Order::isPaid() to correspond to the Status enum field
 * If EcommerceRole::findCountry() cannot find the user's country, don't cause an error
 * Fixed Order->_ModifiersSubTotal() to exclude classes properly
 * Stopped errors occurring if calling shoppingcart/additem without an index ID
 * Fixed failing from address in the email for status updates
 * Fixed order status log not working properly
 * Changed reports to use TableListField, and fixed printing
 * Removed old CheckoutPage.js code that was broken, replaced with working version
 * Renamed MemberForm to ShopAccountForm since this is too general
 * Removed specifically set CMS fields, these are now scaffolded. 
 * Moved payment class URL rules to payment module _config.php
 * Product title not displayed in Receipt Email. Ticket #3680 
 * Fixed price still showing even if price set to 0 in product 
 * Moved Eway.js from ecommerce to payment module
 * Moved Eway payments to payments module
 * Removed restrictive decimal for Tax Rate field and replaced with double type
 * Gracefully degrade if member is not logged in on MemberForm
 * Fixed setRelationAutoSetting method that may not exist in old SS version
 * Add payment decorator to ecommerce, since payment classes now split into payments module
 * Added information about payment module being required
 * Separate payments into a separate module ("payment" module)
 * disable two deprecated functions in ecommerce/code/_config.php
 * Fixing usage of deprecated APIs
 * Make sure array in set_payment_methods() is associative
 * Cleaned up OrderReport to use non-deprecated APIs, refactored to use TableListField
 * Update i18n entities since the Report class was renamed
 * Updated ecommerce report classes to reflect change from Report to SSReport 
 * removed ecommerce jquery directory that isn't being used anymore
 * Removed javascript that shouldn't be done until we've got more of a stable platform
 * Instead of hardcoding css/js requirements into Report.php
 * Deleted ViewAllProducts.ss which was a relic of the now deleted DataReport API
 * Removed "abstract" Report class, which is now in the cms module
 * documentation of vital methods on Payment class
 * added links to examples for LiveAmount() on OrderModifier
 * Added documentation to OrderModifier::is_chargable
 * If amount for an OrderModifier is not chargable, then show a minus sign
 * added a better description to OrderModifier->TableTitle
 * Lots of code documentation and cleanup of code
 * Changed Order_Attribute to OrderAttribute, since this is operates on its own separate from Order
 * If a product can't be purchased, should still be able to see them but just can't add to cart
 * Paystation Hosted Payment added (now in "payment" module)
 * Fixed boundary condition in SimpleShippingModifier
 * jQuery code to replace existing prototype in ecommerce
 * Fixed requirement of $_SERVER[REMOTE_ADDR] for Payment class
 * Product version is now retained when product added to cart (so price changes don't affect orders)
 * Fixed bug with TaxModifier::AddedCharge()

0.5.1

 * Use the Session class rather than accessing $_SESSION directly
 * Template changes for 2.1.0
 * Use themes

0.5

 * Initial release